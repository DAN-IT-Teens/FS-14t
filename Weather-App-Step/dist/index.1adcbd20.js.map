{"mappings":"AAAA,MAAM,cAAqC,SAAS,aAAa,CAAC;AAClE,MAAM,mBAA4C,SAAS,aAAa,CAAC;AACzE,MAAM,mBAA6C,SAAS,aAAa,CAAC;AAC1E,MAAM,oBAA8C,SAAS,aAAa,CAAC;AAC3E,MAAM,kBAAwD,SAAS,gBAAgB,CAAC;AAExF,MAAM,UAAkB,oCAAoC,iBAAiB;AAE7E,SAAS,UAAU,KAAqB;IACpC,MAAM,SAAS,CAAC,MAAM,CAAC;AAC3B;AAEA,gBAAgB,OAAO,CAAC,CAAC;IACrB,OAAO,gBAAgB,CAAC,SAAS;QAC7B,IAAG,aACC,UAAU;IAElB;AACJ;AAEA,kBAAkB,iBAAiB,SAAS;IACxC,IAAG,aACC,UAAU;AAElB;AAEA,IAAI,YAAsB,EAAE;AAE5B,SAAS;IACL,MAAM,kBAAyC,SAAS,aAAa,CAAC;IACtE,MAAM,iBAAwC,SAAS,aAAa,CAAC;IAErE,IAAG,UAAU,MAAM,KAAK,GAAG;QACvB,gBAAgB,UAAU,IAAI;QAC9B,iBAAiB,UAAU,OAAO;IACtC,OAAO;QACH,iBAAiB,UAAU,IAAI;QAC/B,gBAAgB,UAAU,OAAO;IACrC;AACJ;AAEA,OAAO,gBAAgB,CAAC,oBAAoB;IACxC;AACJ;AA2CA,MAAM;IAIF,YAAY,IAAY,CAAE;QACtB,IAAI,CAAC,IAAI,GAAG;IAChB;IAEA,aAAkB;QACd,OAAO,MAAM,CAAC,kDAAkD,EAAE,IAAI,CAAC,IAAI,CAAC,4DAA4D,CAAC,EACpI,IAAI,CAAC,CAAA;YACF,MAAM,OAAO,IAAI,IAAI;YACrB,KAAK,IAAI,CAAC,CAAC,QAA2B,IAAI,CAAC,WAAW,GAAG;YACzD,IAAG,eAAe,IAAI,MAAM,KAAK,KAC7B,UAAU;YAEd,OAAO;QACX;IACR;IAEA,aAAkB;QACd,OAAO,CAAC;;;;;;;;wBAQQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;;sEAGsB,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;;;sDAoB7C,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;sDAKjC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;sDAKjC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;QAI/E,CAAC;IACL;AACH;AAED,mBAAmB,iBAAiB,SAAS;IACzC,MAAM,WAA+B,kBAAkB;IACvD,QAAQ,GAAG,CAAC;IACZ,IAAG,UAAU;QACT,MAAM,OAAO,IAAI,KAAK;QACtB,KAAK,UAAU,GACV,IAAI,CAAC,CAAC;YACH,QAAQ,GAAG,CAAC;YACZ,UAAU,IAAI,CAAC,IAAI,IAAI;YACvB,MAAM,iBAAiB,SAAS,aAAa,CAAC;YAC9C,MAAM,OAAO,SAAS,aAAa,CAAC;YACpC,KAAK,SAAS,GAAG,KAAK,UAAU;YAChC,gBAAgB,OAAO;YACvB;QACJ;IACR;AACJ","sources":["app/scripts/script.ts"],"sourcesContent":["const searchModal: HTMLDivElement | null = document.querySelector('#searchModal');\nconst inputSearchModal: HTMLInputElement | null = document.querySelector(\"#modalCity\");\nconst closeSearchModal: HTMLButtonElement | null = document.querySelector('#closeSearchModal');\nconst submitSearchModal: HTMLButtonElement | null = document.querySelector('#submitSearchModal');\nconst openSearchModal: NodeListOf<HTMLButtonElement> | null = document.querySelectorAll('#openSearchModal');\n\nconst api_key: string = \"fa8ed04cfd663fe1da3794f3f3f4d03e\"; // openWeatherApp\n\nfunction openModal(modal: HTMLDivElement): void {\n    modal.classList.toggle('hidden');\n}\n\nopenSearchModal.forEach((button: HTMLButtonElement) => {\n    button.addEventListener('click', () => {\n        if(searchModal) {\n            openModal(searchModal);\n        }\n    })\n})\n\ncloseSearchModal?.addEventListener('click', () => {\n    if(searchModal) {\n        openModal(searchModal);\n    }\n})\n\nlet localData: string[] = [];\n\nfunction updateLocalData(): void {\n    const clearWeatherApp: HTMLDivElement | null = document.querySelector('#clearWeatherApp');\n    const listWeatherApp: HTMLDivElement | null = document.querySelector('#listWeatherApp');\n\n    if(localData.length === 0) {\n        listWeatherApp?.classList.add('hidden');\n        clearWeatherApp?.classList.remove('hidden');\n    } else {\n        clearWeatherApp?.classList.add('hidden');\n        listWeatherApp?.classList.remove('hidden');\n    }\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    updateLocalData();\n})\n\ninterface WeatherResponse {\n    coord: {\n        lon: number,\n        lat: number\n    },\n    weather: Array<{\n        id: number;\n        main: string;\n        description: string;\n        icon: string;\n    }>,\n    base: string,\n    main: {\n        temp: number;\n        pressure: number;\n        humidity: number;\n        temp_min: number;\n        temp_max: number;\n    },\n    visibility: number,\n    wind: {\n        speed: number;\n        deg: number;\n    },\n    clouds: {\n        all: number;\n    },\n    dt: number;\n    sys: {\n        type: number;\n        id: number;\n        message: number;\n        country: string;\n        sunrise: number;\n        sunset: number;\n    },\n    id: number,\n    name: string,\n    cod: number,\n}\n\nclass City {\n    name: string;\n    weatherInfo: WeatherResponse;\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    getWeather(): any {\n        return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.name}&appid=fa8ed04cfd663fe1da3794f3f3f4d03e&units=metric&lang=ua`)\n            .then(res => {\n                const info = res.json();\n                info.then((value: WeatherResponse) => this.weatherInfo = value);\n                if(searchModal && res.status === 200) {\n                    openModal(searchModal);\n                }\n                return info;\n            })\n    }\n\n    renderCard(): any {\n        return `\n            <a href=\"#\" class=\"relative block overflow-hidden rounded-lg border border-gray-100 p-4 sm:p-6 lg:p-8\">\n            <span\n                class=\"absolute inset-x-0 bottom-0 h-2 bg-gradient-to-r from-green-300 via-blue-500 to-purple-600\"></span>\n\n            <div class=\"sm:flex sm:justify-between sm:gap-4\">\n                <div>\n                    <h3 class=\"text-lg font-bold text-gray-900 sm:text-xl\">\n                        ${this.weatherInfo.name}\n                    </h3>\n\n                    <p class=\"mt-1 text-xs font-medium text-gray-600\">${this.weatherInfo.main.temp}°C</p>\n                </div>\n\n                <div class=\"hidden sm:block sm:shrink-0\">\n                    <img alt=\"\"\n                        src=\"https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1180&q=80\"\n                        class=\"size-16 rounded-lg object-cover shadow-sm\" />\n                </div>\n            </div>\n\n            <div class=\"mt-4\">\n                <p class=\"text-pretty text-sm text-gray-500\">\n                    Lorem ipsum dolor sit, amet consectetur adipisicing elit. At velit illum provident a, ipsa\n                    maiores deleniti consectetur nobis et eaque.\n                </p>\n            </div>\n\n            <dl class=\"mt-6 flex gap-4 sm:gap-6\">\n                <div class=\"flex flex-col-reverse\">\n                    <dt class=\"text-sm font-medium text-gray-600\">Вологість</dt>\n                    <dd class=\"text-xs text-gray-500\">${this.weatherInfo.main.humidity}</dd>\n                </div>\n\n                <div class=\"flex flex-col-reverse\">\n                    <dt class=\"text-sm font-medium text-gray-600\">Максимальна температура</dt>\n                    <dd class=\"text-xs text-gray-500\">${this.weatherInfo.main.temp_max}</dd>\n                </div>\n\n                <div class=\"flex flex-col-reverse\">\n                    <dt class=\"text-sm font-medium text-gray-600\">Мінімальна температура</dt>\n                    <dd class=\"text-xs text-gray-500\">${this.weatherInfo.main.temp_min}</dd>\n                </div>\n            </dl>\n        </a>\n        `\n    }\n }\n\nsubmitSearchModal?.addEventListener('click', () => {\n    const cityName: string | undefined = inputSearchModal?.value;\n    console.log(cityName);\n    if(cityName) {\n        const city = new City(cityName);\n        city.getWeather()\n            .then((res: WeatherResponse) => {\n                console.log(res);\n                localData.push(res.name);\n                const listWeatherApp = document.querySelector('#listWeatherApp');\n                const card = document.createElement('div');\n                card.innerHTML = city.renderCard();\n                listWeatherApp?.append(card);\n                updateLocalData(); \n            })\n    }\n});\n\n"],"names":[],"version":3,"file":"index.1adcbd20.js.map","sourceRoot":"/__parcel_source_root/"}